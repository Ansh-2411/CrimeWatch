{"ast":null,"code":"var _jsxFileName = \"/Users/ansh/Documents/Oddo/client/src/pages/ReportForm/components/ChatbotAssistance.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatbotAssistant = () => {\n  _s();\n  const [chatMsg, setChatMsg] = useState('');\n  const [messages, setMessages] = useState([]); // State to store messages\n\n  const getChat = async e => {\n    e.preventDefault();\n    if (!chatMsg) return; // Don't send empty messages\n\n    // Add the user's message to the messages array\n    setMessages([...messages, {\n      sender: 'user',\n      text: chatMsg\n    }]);\n    try {\n      // Send the chat message to the backend\n      const response = await axios.post('http://127.0.0.1:5000/crime-guidance', {\n        crime_type: chatMsg\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(response);\n\n      // Add the chatbot's response to the messages array\n      setMessages(prevMessages => [...prevMessages, {\n        sender: 'bot',\n        text: response.data.message || 'I didn\\'t understand that.'\n      }]);\n\n      // Clear the input field\n      setChatMsg('');\n    } catch (error) {\n      console.error('Error during the request:', error);\n      setMessages(prevMessages => [...prevMessages, {\n        sender: 'bot',\n        text: 'An error occurred while processing your request.'\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rounded-lg bg-gray-50 p-4 h-96 flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto mb-4 space-y-4\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-3 rounded ${msg.sender === 'user' ? 'bg-blue-500 text-white' : 'bg-gray-300 text-gray-800'}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"flex-1 p-2 rounded bg-white border border-gray-300 text-gray-900\",\n        placeholder: \"Type your message...\",\n        value: chatMsg,\n        onChange: e => setChatMsg(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getChat,\n        className: \"bg-blue-500 text-white p-2 rounded\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatbotAssistant, \"xBbwMzdo9vdY4HWJQty+K6dtLMU=\");\n_c = ChatbotAssistant;\nexport default ChatbotAssistant;\nvar _c;\n$RefreshReg$(_c, \"ChatbotAssistant\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ChatbotAssistant","_s","chatMsg","setChatMsg","messages","setMessages","getChat","e","preventDefault","sender","text","response","post","crime_type","headers","console","log","prevMessages","data","message","error","className","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["/Users/ansh/Documents/Oddo/client/src/pages/ReportForm/components/ChatbotAssistance.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst ChatbotAssistant = () => {\n    const [chatMsg, setChatMsg] = useState('');\n    const [messages, setMessages] = useState([]); // State to store messages\n\n    const getChat = async (e) => {\n        e.preventDefault();\n\n        if (!chatMsg) return; // Don't send empty messages\n\n        // Add the user's message to the messages array\n        setMessages([...messages, { sender: 'user', text: chatMsg }]);\n\n        try {\n            // Send the chat message to the backend\n            const response = await axios.post('http://127.0.0.1:5000/crime-guidance', { crime_type: chatMsg }, {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n            console.log(response)\n\n            // Add the chatbot's response to the messages array\n            setMessages((prevMessages) => [\n                ...prevMessages,\n                { sender: 'bot', text: response.data.message || 'I didn\\'t understand that.' }\n            ]);\n\n            // Clear the input field\n            setChatMsg('');\n\n        } catch (error) {\n            console.error('Error during the request:', error);\n            setMessages((prevMessages) => [\n                ...prevMessages,\n                { sender: 'bot', text: 'An error occurred while processing your request.' }\n            ]);\n        }\n    };\n\n    return (\n        <div className=\"rounded-lg bg-gray-50 p-4 h-96 flex flex-col\">\n            <div className=\"flex-1 overflow-y-auto mb-4 space-y-4\">\n                {messages.map((msg, index) => (\n                    <div\n                        key={index}\n                        className={`p-3 rounded ${msg.sender === 'user' ? 'bg-blue-500 text-white' : 'bg-gray-300 text-gray-800'}`}\n                    >\n                        <p>{msg.text}</p>\n                    </div>\n                ))}\n            </div>\n\n            <div className=\"flex gap-2\">\n                <input\n                    type=\"text\"\n                    className=\"flex-1 p-2 rounded bg-white border border-gray-300 text-gray-900\"\n                    placeholder=\"Type your message...\"\n                    value={chatMsg}\n                    onChange={(e) => setChatMsg(e.target.value)}\n                />\n                <button onClick={getChat} className=\"bg-blue-500 text-white p-2 rounded\">\n                    Send\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default ChatbotAssistant;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}